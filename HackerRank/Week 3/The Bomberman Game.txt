#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void fill_grid(char **grid, int r, int c) {
    for (int i = 0; i < r; i++)
        for (int j = 0; j < c; j++)
            grid[i][j] = 'O';
}

void detonate(char **grid, char **state, int r, int c) {
    int dx[4] = {-1, 1, 0, 0};
    int dy[4] = {0, 0, -1, 1};
    for (int i = 0; i < r; i++)
        for (int j = 0; j < c; j++)
            if (state[i][j] == 'O') {
                grid[i][j] = '.';
                for (int k = 0; k < 4; k++) {
                    int ni = i + dx[k], nj = j + dy[k];
                    if (ni >= 0 && ni < r && nj >= 0 && nj < c)
                        grid[ni][nj] = '.';
                }
            }
}

char **bomberMan(int n, char **grid, int r, int c) {
    if (n == 1) return grid;
    if (n % 2 == 0) {
        char **full = malloc(r * sizeof(char*));
        for (int i = 0; i < r; i++) {
            full[i] = malloc(c + 1);
            for (int j = 0; j < c; j++) full[i][j] = 'O';
            full[i][c] = '\0';
        }
        return full;
    }
    char **first = malloc(r * sizeof(char*));
    for (int i = 0; i < r; i++) {
        first[i] = malloc(c + 1);
        for (int j = 0; j < c; j++) first[i][j] = 'O';
        first[i][c] = '\0';
    }
    detonate(first, grid, r, c);
    if (n % 4 == 3) return first;
    char **second = malloc(r * sizeof(char*));
    for (int i = 0; i < r; i++) {
        second[i] = malloc(c + 1);
        for (int j = 0; j < c; j++) second[i][j] = 'O';
        second[i][c] = '\0';
    }
    detonate(second, first, r, c);
    return second;
}

int main() {
    int r, c, n;
    scanf("%d %d %d", &r, &c, &n);
    char **grid = malloc(r * sizeof(char*));
    for (int i = 0; i < r; i++) {
        grid[i] = malloc(c + 1);
        scanf("%s", grid[i]);
    }

    char **result = bomberMan(n, grid, r, c);
    for (int i = 0; i < r; i++) {
        printf("%s\n", result[i]);
    }
    return 0;
}
