#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

#define MAX 100000

int heap[MAX];
int heapSize = 0;
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
void insertHeap(int val) {
    heap[++heapSize] = val;
    int i = heapSize;

    while (i > 1 && heap[i] < heap[i / 2]) {
        swap(&heap[i], &heap[i / 2]);
        i /= 2;
    }
}
void heapify(int i) {
    int smallest = i;
    int left = 2 * i;
    int right = 2 * i + 1;
    if (left <= heapSize && heap[left] < heap[smallest])
        smallest = left;
    if (right <= heapSize && heap[right] < heap[smallest])
        smallest = right;
    if (smallest != i) {
        swap(&heap[i], &heap[smallest]);
        heapify(smallest);
    }
}


void deleteElement(int val) {
    int pos = -1;
    for (int i = 1; i <= heapSize; i++) {
        if (heap[i] == val) {
            pos = i;
            break;
        }
    }
    if (pos == -1) return; 
    heap[pos] = heap[heapSize--]; 
    heapify(pos);
}

int getMin() {
    return heap[1];
}

int main() {
    int q;
    scanf("%d", &q);
    for (int i = 0; i < q; i++) {
        int type;
        scanf("%d", &type);
        if (type == 1) { 
            int val;
            scanf("%d", &val);
            insertHeap(val);
        } else if (type == 2) { 
            int val;
            scanf("%d", &val);
            deleteElement(val);
        } else if (type == 3) { 
            printf("%d\n", getMin());
        }
    }

    return 0;
}